{
  "contractName": "PullPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.\",\"kind\":\"dev\",\"methods\":{\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/security/PullPayment.sol\":\"PullPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"project:/contracts/security/PullPayment.sol\":{\"keccak256\":\"0xbb286f865aa7ae537a147695baf219277a823e06f6d2008e9d2aaa6f6686aa95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf20dfb65d16490a017c54723a3ddd4ed783e09330ddfd7ca6afa1a62b1092df\",\"dweb:/ipfs/QmaXkj3mf3LqK3kNWp1euD8YJvsEx78ph2ApxMdfhrDjRn\"]},\"project:/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"project:/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0x10a40dfab727e06bb3472d1bc9ccf145a604b0c9889d5c7a2eff64d72348eb21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://674750c34ed03e9ecf7f0714e874de372807bde3999ac2046dfbf7965926780e\",\"dweb:/ipfs/QmVw86CgPowu2Zd3fiJmGmK1vNhoLvcWdY9cUaFDwCbanN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/PullPayment.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/escrow/Escrow.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\nabstract contract PullPayment {\n    Escrow private immutable _escrow;\n\n    constructor() {\n        _escrow = new Escrow();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{value: amount}(dest);\n    }\n}\n",
  "sourcePath": "/home/jcardenes/Documents/web3/pet-shop-tutorial/contracts/security/PullPayment.sol",
  "ast": {
    "absolutePath": "project:/contracts/security/PullPayment.sol",
    "exportedSymbols": {
      "Address": [
        15776
      ],
      "Context": [
        15883
      ],
      "Escrow": [
        17442
      ],
      "Ownable": [
        713
      ],
      "PullPayment": [
        7655
      ]
    },
    "id": 7656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7594,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:62"
      },
      {
        "absolutePath": "project:/contracts/utils/escrow/Escrow.sol",
        "file": "../utils/escrow/Escrow.sol",
        "id": 7595,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 17443,
        "src": "118:36:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "PullPayment",
        "contractDependencies": [
          17442
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7596,
          "nodeType": "StructuredDocumentation",
          "src": "156:949:62",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 7655,
        "linearizedBaseContracts": [
          7655
        ],
        "name": "PullPayment",
        "nameLocation": "1124:11:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7599,
            "mutability": "immutable",
            "name": "_escrow",
            "nameLocation": "1167:7:62",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "1142:32:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$17442",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "id": 7598,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7597,
                "name": "Escrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17442,
                "src": "1142:6:62"
              },
              "referencedDeclaration": 17442,
              "src": "1142:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$17442",
                "typeString": "contract Escrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7609,
              "nodeType": "Block",
              "src": "1195:39:62",
              "statements": [
                {
                  "expression": {
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7602,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7599,
                      "src": "1205:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$17442",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1215:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$17442_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "id": 7604,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7603,
                            "name": "Escrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 17442,
                            "src": "1219:6:62"
                          },
                          "referencedDeclaration": 17442,
                          "src": "1219:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$17442",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1215:12:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$17442",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "1205:22:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$17442",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:22:62"
                }
              ]
            },
            "id": 7610,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:62"
            },
            "returnParameters": {
              "id": 7601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:62"
            },
            "scope": 7655,
            "src": "1181:53:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7622,
              "nodeType": "Block",
              "src": "1947:40:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7619,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7613,
                        "src": "1974:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 7616,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1957:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$17442",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 7618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17441,
                      "src": "1957:16:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 7620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7621,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:23:62"
                }
              ]
            },
            "documentation": {
              "id": 7611,
              "nodeType": "StructuredDocumentation",
              "src": "1240:638:62",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 7623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nameLocation": "1892:16:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7613,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1925:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7623,
                  "src": "1909:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:15:62",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:23:62"
            },
            "returnParameters": {
              "id": 7615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:0:62"
            },
            "scope": 7655,
            "src": "1883:104:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7636,
              "nodeType": "Block",
              "src": "2167:48:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7633,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7626,
                        "src": "2203:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7631,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "2184:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$17442",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 7632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17384,
                      "src": "2184:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:24:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7630,
                  "id": 7635,
                  "nodeType": "Return",
                  "src": "2177:31:62"
                }
              ]
            },
            "documentation": {
              "id": 7624,
              "nodeType": "StructuredDocumentation",
              "src": "1993:107:62",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 7637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nameLocation": "2114:8:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7626,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2131:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "2123:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:14:62"
            },
            "returnParameters": {
              "id": 7630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "2158:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:9:62"
            },
            "scope": 7655,
            "src": "2105:110:62",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7653,
              "nodeType": "Block",
              "src": "2645:53:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7650,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7640,
                        "src": "2686:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 7645,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7599,
                          "src": "2655:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$17442",
                            "typeString": "contract Escrow"
                          }
                        },
                        "id": 7647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17409,
                        "src": "2655:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 7649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 7648,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7642,
                          "src": "2678:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2655:30:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 7651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:36:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7652,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:36:62"
                }
              ]
            },
            "documentation": {
              "id": 7638,
              "nodeType": "StructuredDocumentation",
              "src": "2221:348:62",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 7654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nameLocation": "2583:14:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7640,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2606:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2598:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2620:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2612:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:30:62"
            },
            "returnParameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2645:0:62"
            },
            "scope": 7655,
            "src": "2574:124:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 7656,
        "src": "1106:1594:62",
        "usedErrors": []
      }
    ],
    "src": "93:2608:62"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/security/PullPayment.sol",
    "exportedSymbols": {
      "Address": [
        15776
      ],
      "Context": [
        15883
      ],
      "Escrow": [
        17442
      ],
      "Ownable": [
        713
      ],
      "PullPayment": [
        7655
      ]
    },
    "id": 7656,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7594,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:62"
      },
      {
        "absolutePath": "project:/contracts/utils/escrow/Escrow.sol",
        "file": "../utils/escrow/Escrow.sol",
        "id": 7595,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7656,
        "sourceUnit": 17443,
        "src": "118:36:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "PullPayment",
        "contractDependencies": [
          17442
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 7596,
          "nodeType": "StructuredDocumentation",
          "src": "156:949:62",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 7655,
        "linearizedBaseContracts": [
          7655
        ],
        "name": "PullPayment",
        "nameLocation": "1124:11:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7599,
            "mutability": "immutable",
            "name": "_escrow",
            "nameLocation": "1167:7:62",
            "nodeType": "VariableDeclaration",
            "scope": 7655,
            "src": "1142:32:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$17442",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "id": 7598,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 7597,
                "name": "Escrow",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 17442,
                "src": "1142:6:62"
              },
              "referencedDeclaration": 17442,
              "src": "1142:6:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$17442",
                "typeString": "contract Escrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 7609,
              "nodeType": "Block",
              "src": "1195:39:62",
              "statements": [
                {
                  "expression": {
                    "id": 7607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 7602,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7599,
                      "src": "1205:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$17442",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1215:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$17442_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "id": 7604,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 7603,
                            "name": "Escrow",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 17442,
                            "src": "1219:6:62"
                          },
                          "referencedDeclaration": 17442,
                          "src": "1219:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$17442",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 7606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1215:12:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$17442",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "1205:22:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$17442",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:22:62"
                }
              ]
            },
            "id": 7610,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1192:2:62"
            },
            "returnParameters": {
              "id": 7601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1195:0:62"
            },
            "scope": 7655,
            "src": "1181:53:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7622,
              "nodeType": "Block",
              "src": "1947:40:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7619,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7613,
                        "src": "1974:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 7616,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "1957:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$17442",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 7618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17441,
                      "src": "1957:16:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 7620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1957:23:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7621,
                  "nodeType": "ExpressionStatement",
                  "src": "1957:23:62"
                }
              ]
            },
            "documentation": {
              "id": 7611,
              "nodeType": "StructuredDocumentation",
              "src": "1240:638:62",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 7623,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nameLocation": "1892:16:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7613,
                  "mutability": "mutable",
                  "name": "payee",
                  "nameLocation": "1925:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7623,
                  "src": "1909:21:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 7612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1909:15:62",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1908:23:62"
            },
            "returnParameters": {
              "id": 7615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1947:0:62"
            },
            "scope": 7655,
            "src": "1883:104:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7636,
              "nodeType": "Block",
              "src": "2167:48:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7633,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7626,
                        "src": "2203:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7631,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7599,
                        "src": "2184:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$17442",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 7632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17384,
                      "src": "2184:18:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 7634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:24:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 7630,
                  "id": 7635,
                  "nodeType": "Return",
                  "src": "2177:31:62"
                }
              ]
            },
            "documentation": {
              "id": 7624,
              "nodeType": "StructuredDocumentation",
              "src": "1993:107:62",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 7637,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nameLocation": "2114:8:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7626,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2131:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "2123:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:14:62"
            },
            "returnParameters": {
              "id": 7630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7629,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 7637,
                  "src": "2158:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:9:62"
            },
            "scope": 7655,
            "src": "2105:110:62",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7653,
              "nodeType": "Block",
              "src": "2645:53:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7650,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7640,
                        "src": "2686:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 7645,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7599,
                          "src": "2655:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$17442",
                            "typeString": "contract Escrow"
                          }
                        },
                        "id": 7647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17409,
                        "src": "2655:15:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 7649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 7648,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7642,
                          "src": "2678:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2655:30:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 7651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2655:36:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7652,
                  "nodeType": "ExpressionStatement",
                  "src": "2655:36:62"
                }
              ]
            },
            "documentation": {
              "id": 7638,
              "nodeType": "StructuredDocumentation",
              "src": "2221:348:62",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 7654,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nameLocation": "2583:14:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7640,
                  "mutability": "mutable",
                  "name": "dest",
                  "nameLocation": "2606:4:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2598:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7642,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2620:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 7654,
                  "src": "2612:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7641,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:30:62"
            },
            "returnParameters": {
              "id": 7644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2645:0:62"
            },
            "scope": 7655,
            "src": "2574:124:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 7656,
        "src": "1106:1594:62",
        "usedErrors": []
      }
    ],
    "src": "93:2608:62"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-23T17:52:17.154Z",
  "devdoc": {
    "details": "Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.",
    "kind": "dev",
    "methods": {
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}